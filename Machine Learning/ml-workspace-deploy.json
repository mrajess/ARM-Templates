{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Machine Learning Workspace. This name will be concatenated on to the resources provisioned for the workspace, such as the storage account.",
                "displayName": "Machine Learning Workspace Name"
            }
        },
        "subnetResourceID": {
            "type": "string",
            "metadata": {
                "description": "This is the name of the subnet that the solution will be deployed to. All resources will be secured to this subnet vai Service Endpoints or Private Endpoints.",
                "displayName": "Subnet Name"
            }
        }
    },
    "functions": [],
    "variables": {
        "tenantId": "[subscription().tenantId]",
        "storageAccountName": "[concat('sa',uniqueString(resourceGroup().id, parameters('workspaceName')))]",
        "keyVaultName": "[concat('kv',uniqueString(resourceGroup().id, parameters('workspaceName')))]",
        "containerRegistryName": "[concat('cr',uniqueString(resourceGroup().id, parameters('workspaceName')))]",
        "applicationInsightsName": "[concat('ai',uniqueString(resourceGroup().id, parameters('workspaceName')))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_ZRS"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                    "defaultAction": "deny",
                    "virtualNetworkRules": [
                        {
                            "action": "Allow",
                            "id": "[parameters('subnetResourceID')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "tenantId": "[variables('tenantId')]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 14,
                "enablePurgeProtection": true,
                "networkAcls": {
                    "defaultAction": "deny",
                    "virtualNetworkRules": [
                        {
                            "action": "Allow",
                            "id": "[parameters('subnetResourceID')]"
                        }
                    ]
                },
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-12-01-preview",
            "name": "[variables('containerRegistryName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Premium"
            },
            "properties": {
                "adminUserEnabled": true,
                "networkRuleSet": {
                    "defaultAction": "deny",
                    "virtualNetworkRules": [
                        {
                            "action": "Allow",
                            "id": "[parameters('subnetResourceID')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-08-01",
            "name": "[parameters('workspaceName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "systemAssigned"
            },
            "dependsOn": [
                "[variables('storageAccount')]",
                "[variables('keyVault')]",
                "[variables('applicationInsights')]",
                "[variables('containerRegistry')]"
            ],
            "properties": {
                "friendlyName": "[parameters('workspaceName')]",
                "storageAccount": "[variables('storageAccount')]",
                "keyVault": "[variables('keyVault')]",
                "applicationInsights": "[variables('applicationInsights')]",
                "containerRegistry": "[variables('containerRegistry')]",
                "hbiWorkspace": true
            }
        }
    ],
    "outputs": {}
}