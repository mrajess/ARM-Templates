{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "String",
            "metadata": {
                "description": "Name for the Machine Learning Workspace. This name will be concatenated on to the resources provisioned for the workspace, such as the storage account.",
                "displayName": "Machine Learning Workspace Name"
            }
        },
        "vnetName": {
            "type": "String",
            "metadata": {
                "description": "The name of the VNet the solution will be deployed to.",
                "displayName": "VNet Name"
            }
        },
        "subnetName": {
            "type": "String",
            "metadata": {
                "description": "This is the name of the subnet that the solution will be deployed to. All resources will be secured to this subnet vai Service Endpoints or Private Endpoints.",
                "displayName": "Subnet Name"
            }
        },
        "subnetPrefix": {
            "type": "String",
            "metadata": {
                "description": "This is the prefix for the subnet that will be created. Example: 10.0.0.0/24",
                "displayName": "Subnet Address Space"
            }
        }
    },
    "variables": {
        "nsgName": "[concat(parameters('workspaceName'), '-NSG')]",
        "subnetName": "[concat(parameters('vnetName'), '/', parameters('subnetName'))]"
    },
    "functions": [],
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Subnet-Inbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnetPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-Subnet-Outbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('subnetPrefix')]",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-VirtualNetwork-Inbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 2000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-VirtualNetwork-Outbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Deny",
                            "priority": 2000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[variables('subnetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nsgName')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                },
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage"
                    },
                    {
                        "service": "Microsoft.KeyVault"
                    },
                    {
                        "service": "Microsoft.ContainerRegistry"
                    }
                ]
            }
        }
    ],
    "outputs": {
        "subnetResourceID": {
            "type": "String",
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
        }
    }
}